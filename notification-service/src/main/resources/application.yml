## YAML Template.
---
# src/main/resources/application.yml for Product Service
server:
  port: 5005 # A unique port for this microservice
 
# Set logging level to debug BUT REMOVE IN PRODUCTION      
logging:
  level:
    org.springframework.security: DEBUG

truststore:
  path: classpath:backend_truststore.p12
  password: microservicetrustpass@123+@+
  
spring:
  application:
    name: notification-service # The unique name of this service, used by Eureka
    
  security:
    oauth2:
      resourceserver:
        jwt:
          # This issuer-uri is good for matching the 'iss' claim in the JWT.
          # It also allows Spring to attempt discovery of JWKS via .well-known/openid-configuration if available.
          issuer-uri: https://localhost:8443 # Replace with your Auth Server's actual issuer URI

          # THIS IS CRUCIAL FOR SIGNATURE VERIFICATION.
          # It tells Spring Security where to fetch the public keys (JWKS) to validate the JWT's signature.
          # This should point to the JWK Set endpoint of your Authorization Server.
          jwk-set-uri: https://localhost:8443/realms/chuks-emaketplace-realm/protocol/openid-connect/certs # Example for Keycloak
  autoconfigure:
    # Disable Auto Security Configuration for this microservice if Spring Security is in class path - we do not need it
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration


  # RabbitMQ Connection Details for user-service
  rabbitmq:
    host: localhost # Change if RabbitMQ is on a different host
  rabbitmq:
    port: 5672
  rabbitmq:
    username: guest # TODO
  rabbitmq:
    password: guest #TODO

  # spring.rabbitmq.virtual-host=/ # Uncomment if using a specific virtual host
  # Spring Mail SMTP Configuration (REQUIRED for SmtpEmailSenderService)
  # Replace with your actual SMTP server details. For production, use a dedicated email service.
  #mail:
  #  host: smtp.gmail.com # Example: smtp.sendgrid.net, email-smtp.us-east-1.amazonaws.com
  #  port: 587 # Standard for TLS. Use 465 for SSL.
  #  username: your-email@gmail.com # Your email address for sending
  #  password: YOUR_EMAIL_APP_PASSWORD # IMPORTANT: Use an app password for Gmail, not your main password. For other providers, use the generated SMTP password.
  #  properties:
  #    mail.smtp.auth: true
  #    mail.smtp.starttls.enable: true # Enable STARTTLS
  #    mail.smtp.starttls.required: true # Require STARTTLS
  #  test-connection: true # Test connection on application startup  
  
  #FOR TESTING - Email Configuration fo local development 
  mail:
    host: localhost
    port: 1025
    username: ""
    password: ""
    properties:
      mail.smtp.auth: false
      mail.smtp.starttls.enable: false
    test-connection: true
    
twilio:
  account:
    sid: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  auth:
    token: XXXXXXXXXXXXXXXXXX
  phone:
    number: +15077347433 # Your Twilio phone number
    
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/ # Pointing to your Eureka Server
  instance:
    hostname: localhost # For local development, use localhost
    prefer-ip-address: true # Optional: Register with IP address instead of hostname (good for containerized envs)
    
    

jwt:
  auth:
    converter:
      resource-id: emaketplace-app
      principle-attribute: preferred_username
      
    