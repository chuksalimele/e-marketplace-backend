plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        flatDir {
            dirs rootProject.file('lib') // Load external JARs
        }
    }

    ext {
        springStatemachineVersion = '3.2.1'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
        
    test {
        useJUnitPlatform() // Explicitly tells Gradle to use JUnit Platform for test execution
    }

    dependencies {
        implementation fileTree(dir: "${rootProject.projectDir}/lib", include: ["**/*.jar"])
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
        }

    }

    //Apply duplicate handling strategy for jar creation
    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    //Apply duplicate handling strategy for bootJar creation
    bootJar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    //Apply duplicate handling strategy for distTar creation
    distTar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    //Apply duplicate handling strategy for distZip creation
    distZip {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    //And so on - Apply duplicate handling strategy for [ANY TYPE] creation

}
